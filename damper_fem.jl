using ApproxOperator, JLD

import BenchmarkExample: BenchmarkExample

include("impor_damper.jl")
ndiv = 100
# elements, nodes = import_damper_fem("msh/honeycomb_damper_"*string(ndiv)*".msh");
elements, nodes = import_damper_fem("msh/slit damper_"*string(ndiv)*".msh");

n‚Çö = length(nodes)

E = 2E11;ŒΩ = 0.3;h = 10
D = E*h^3/(12*(1-ŒΩ^2));
P = 1E5;

eval(prescribeForFem)

setùù≠!(elements["Œ©"])
set‚àáùù≠!(elements["Œ©"])
setùù≠!(elements["Œì·µç"])
setùù≠!(elements["Œì·µó"])

ops = [
    Operator{:‚à´‚à´Œµ·µ¢‚±ºœÉ·µ¢‚±ºdxdy}(:E=>E,:ŒΩ=>ŒΩ),
    Operator{:‚à´v·µ¢t·µ¢ds}(),
    Operator{:‚à´v·µ¢g·µ¢ds}(:Œ±=>1e5*E),
]
k = zeros(2*n‚Çö,2*n‚Çö)
f = zeros(2*n‚Çö)


ops[1](elements["Œ©"],k)
ops[2](elements["Œì·µó"],f)
ops[3](elements["Œì·µç"],k,f)

d = k\f

d‚ÇÅ = d[1:2:2*n‚Çö]
d‚ÇÇ = d[2:2:2*n‚Çö]
print(d‚ÇÅ[1])
print(d‚ÇÇ[1])