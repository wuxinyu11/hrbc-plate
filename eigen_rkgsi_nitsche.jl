
using XLSX, YAML, ApproxOperator, LinearAlgebra

config = YAML.load_file("./yml/rectangular_rkgsi_nitsche.yml")

ndiv = 20
elements, nodes = importmsh("./msh/rectangular_"*string(ndiv)*".msh", config)

n‚Çö = length(nodes[:x])
n‚Çë = length(elements["Œ©"])

s = 3.1 / ndiv * ones(n‚Çö)
push!(nodes, :s‚ÇÅ => s, :s‚ÇÇ => s, :s‚ÇÉ => s)

sp = RegularGrid(nodes[:x], nodes[:y], nodes[:z], n = 2, Œ≥ = 5)
sp(elements["Œ©"],elements["Œì"],elements["Œì‚Çö‚ÇÅ"],elements["Œì‚Çö‚ÇÇ"],elements["Œì‚Çö‚ÇÉ"],elements["Œì‚Çö‚ÇÑ"])
set_memory_ùù≠!(elements["Œ©À¢"])

set‚àáùù≠!(elements["Œ©"])
set‚àáÃÉ¬≤ùù≠!(elements["Œ©À¢"],elements["Œ©"])
set‚àá¬≥ùù≠!(elements["Œì"])
set‚àá¬≤ùù≠!(elements["Œì‚Çö‚ÇÅ"])
set‚àá¬≤ùù≠!(elements["Œì‚Çö‚ÇÇ"])
set‚àá¬≤ùù≠!(elements["Œì‚Çö‚ÇÉ"])
set‚àá¬≤ùù≠!(elements["Œì‚Çö‚ÇÑ"])

D = 1.0
ŒΩ = 0.3

coefficient = (:D=>1.0,:ŒΩ=>0.3)

ops = [Operator(:‚à´Œ∫·µ¢‚±ºM·µ¢‚±ºdŒ©,coefficient...),
       Operator(:‚à´VgdŒì,:Œ±=>0.0,coefficient...),
       Operator(:‚à´M‚Çô‚ÇôŒ∏dŒì,:Œ±=>0.0,coefficient...),
       Operator(:ŒîM‚Çô‚Çõg,:Œ±=>0.0,coefficient...),
       Operator(:H‚ÇÉ)]

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)

# ops[1](elements["Œ©À¢"],k)
ops[2](elements["Œì"],k,f)
# ops[3](elements["Œì"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÅ"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÇ"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÉ"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÑ"],k,f)

F = eigen(k)
F.values[1]
# sign(F.values[1])*log10(abs(F.values[1]))