
using XLSX, YAML, ApproxOperator, LinearAlgebra

config = YAML.load_file("./yml/rectangular_rkgsi_nitsche.yml")

ndiv = 10
elements, nodes = importmsh("./msh/rectangular_"*string(ndiv)*".msh", config)

n‚Çö = length(nodes)
n‚Çë = length(elements["Œ©"])

s = 3.1 / ndiv * ones(n‚Çö)
push!(nodes,:s‚ÇÅ=>s,:s‚ÇÇ=>s,:s‚ÇÉ=>s)
set_memory_ùó†!(elements["Œ©ÃÉ"],:‚àáÃÉ¬≤)

elements["Œì‚Çö"] = elements["Œì‚Çö‚ÇÅ"]‚à™elements["Œì‚Çö‚ÇÇ"]‚à™elements["Œì‚Çö‚ÇÉ"]‚à™elements["Œì‚Çö‚ÇÑ"]
elements["Œì"] = elements["Œì‚ÇÅ"]‚à™elements["Œì‚ÇÇ"]‚à™elements["Œì‚ÇÉ"]‚à™elements["Œì‚ÇÑ"]

set‚àá‚ÇÇùù≠!(elements["Œ©"])
set‚àáÃÉ¬≤ùù≠!(elements["Œ©ÃÉ"],elements["Œ©"])
set‚àá¬≥ùù≠!(elements["Œì‚ÇÅ"])
set‚àá¬≥ùù≠!(elements["Œì‚ÇÇ"])
set‚àá¬≥ùù≠!(elements["Œì‚ÇÉ"])
set‚àá¬≥ùù≠!(elements["Œì‚ÇÑ"])
set‚àá¬≤‚ÇÇùù≠!(elements["Œì‚Çö‚ÇÅ"])
set‚àá¬≤‚ÇÇùù≠!(elements["Œì‚Çö‚ÇÇ"])
set‚àá¬≤‚ÇÇùù≠!(elements["Œì‚Çö‚ÇÉ"])
set‚àá¬≤‚ÇÇùù≠!(elements["Œì‚Çö‚ÇÑ"])

D = 1.0
ŒΩ = 0.3

coefficient = (:D=>1.0,:ŒΩ=>0.3)

ops = [Operator(:‚à´Œ∫·µ¢‚±ºM·µ¢‚±ºdŒ©,coefficient...),
       Operator(:‚à´VgdŒì,:Œ±=>1e0,coefficient...),
       Operator(:‚à´M‚Çô‚ÇôŒ∏dŒì,:Œ±=>1e8,coefficient...),
       Operator(:ŒîM‚Çô‚Çõg,:Œ±=>0e5,coefficient...),
       Operator(:H‚ÇÉ)]

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)

ops[1](elements["Œ©ÃÉ"],k)
# ops[2](elements["Œì‚ÇÅ"],k,f)
ops[2](elements["Œì"],k,f)
ops[3](elements["Œì"],k,f)
# ops[4](elements["Œì‚Çö"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÇ"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÉ"],k,f)
# ops[4](elements["Œì‚Çö‚ÇÑ"],k,f)

F = eigen(k)
F.values[1]
# sign(F.values[1])*log10(abs(F.values[1]))